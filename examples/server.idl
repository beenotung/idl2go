#include "shared.idl"

module datasharing {
  module server {

    typedef sequence<meta> MetaSeq;
    typedef sequence<string> StringSeq;
    typedef sequence<block> BlockSeq;

    // route: /transaction
    interface TransactionHandler {

      // POST: /create
      void createTransaction(in newDataContainer NewDataContainer) raises(OutOfSpace);

      // POST: /update
      void updateTransaction(in dataContainer DataContainer) raises(OutOfSpace, NotFound, AuthError);

      // GET: /get
      dataContainer getTransaction(in transactionId TxId) raises(NotFound);

    };

    // route: /user
    interface UserHandler {

      // GET: /searchOrgByName
      OrgSeq searchOrgByName(in string OrgName);

      // raises NotFound when the Org doesn't exist
      // GET: /searchDepartmentByName
      DepartmentSeq searchDepartmentByName(in transactionId OrgId, in string DepartmentName) raises(NotFound);

      // raises NotFound when the Department doesn't exist
      // GET: /searchUserByDepartment
      UserSeq searchUserByDepartment(in transactionId DepartmentId, in string UserName) raises(NotFound);

      // GET: /getUserPublicKey
      pubKey getUserPublicKey(in transactionId UserId) raises(NotFound);

      // GET: /verifySignature
      boolean verifySignature(in byteSeq Hash, in transactionId UserId) raises(NotFound); // return true if valid, false if not.

    };

    // route: /meta
    interface MetaHandler {

      // GET: /all
      MetaSeq all();

      // GET: /search
      MetaSeq search(in StringSeq Tags, in string Keyword);

    };

    // route: /block
    interface BlockHandler {

      // GET: /show
      block showBlock(in unsigned long long Height) raises(NetworkError);

      // GET: /showAll
      BlockSeq showBlocks() raises(NetworkError);

      // GET: /height
      unsigned long long getHeight() raises(NetworkError);

    };

  };
};
